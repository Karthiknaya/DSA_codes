class Solution {
    public int minZeroArray(int[] nums, int[][] queries) {
        boolean ZeroFlag = true;
        for(int x: nums){
            if(x > 0){
                ZeroFlag = false;
            }
        }
        if(ZeroFlag) return 0;
        int n =queries.length;
        int left = -1;
        int right = n;
        while(left + 1 < right) {
            int mid = (left + right) / 2;
            if(isValid(nums, queries, mid)) {
                right = mid;
            }else {
                left = mid;
            }
        }
        return right == n ? -1 : (right + 1);
    }

    private boolean isValid(int nums[], int queries[][], int mid) {
        int m = nums.length;
        int diff[] = new int[m];
        for(int i = 0; i <= mid; i++) {
            int left = queries[i][0];
            int right = queries[i][1];
            int val = queries[i][2];
            diff[left] -= val;
            if(right + 1 < m)
                diff[right + 1] += val;
        }
        for(int i = 1; i < m; i++) {
            diff[i] += diff[i - 1];
        }
        for(int i = 0; i < m; i++) {
            if(diff[i] + nums[i] > 0)
                return false;
        }
        return true;
    }
}
