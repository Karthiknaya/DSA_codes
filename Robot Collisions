class Solution {
    public List<Integer> survivedRobotsHealths(int[] positions, int[] healths, String directions){
        List<Integer> list = new ArrayList<>();
        for(int i = 0; i < positions.length; i++) {
            list.add(i);
        }
        Collections.sort(list, (a, b) -> Integer.compare(positions[a], positions[b]));
        Stack<Integer> stk = new Stack<>();
        for(int ind:list) {
            if(directions.charAt(ind)=='L'){
                while(!stk.isEmpty()){
                    int temp = stk.peek();
                    if(healths[ind] == healths[temp]){
                        healths[ind] = 0;
                        healths[temp] = 0;
                        stk.pop();
                        break;
                    }else if(healths[ind] > healths[temp]){
                        healths[ind]--;
                        healths[temp] = 0;
                        stk.pop();
                    }else{
                        healths[ind]=0;
                        healths[temp]--;
                        break;
                    }
                }
            }else{
                stk.push(ind);
            }
        }
        List<Integer> ans = new ArrayList<>();
        for(int item:healths){
            if(item != 0)
                ans.add(item);
        }
        return ans;
    }
}
