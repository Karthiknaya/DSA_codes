class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int[][] dist = new int[n][n];
        for(int[] item: dist){
            Arrays.fill(item, 10001);
        }
        for(int i=0;i<n;i++){
            dist[i][i] = 0;
        }
        for(int i=0;i<edges.length;i++){
            int src = edges[i][0]; 
            int dest = edges[i][1];
            int curr_dis = edges[i][2];
            dist[src][dest] = curr_dis;
            dist[dest][src] = curr_dis;
        }
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    dist[i][j] =Math.min(dist[i][j], dist[i][k] + dist[k][j]);
                }
            }
        }
        int curr_count=Integer.MAX_VALUE;
        int min_city_neighbour = 0;
        for(int i = 0; i<n; i++){
            int count = 0;
            for(int j = 0; j<n ;j++){
                if(i!=j && dist[i][j] <= distanceThreshold) count++;
            }
            if(count <= curr_count){
                curr_count = count;
                min_city_neighbour = i;
            }
        }
        return min_city_neighbour;
    }
}
