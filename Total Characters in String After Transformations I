class Solution {
    public int lengthAfterTransformations(String s, int t){
        long[] countArr = new long[26];
        final int MOD = 1000000007;
        for(char ch : s.toCharArray()){
            countArr[ch - 'a']++;
        }
        for(int step = 0; step < t; step++){
            long[] nextCountArr = new long[26];
            for (int i = 0; i < 26; i++) {
                if(i == 25){ 
                    nextCountArr[0] = (nextCountArr[0] + countArr[i]) % MOD; 
                    nextCountArr[1] = (nextCountArr[1] + countArr[i]) % MOD; 
                }else{
                    nextCountArr[i + 1] = (nextCountArr[i + 1] + countArr[i]) % MOD;
                }
            }
            countArr = nextCountArr;
        }
        long totalLen =0;
        for (long count:countArr) {
            totalLen = (totalLen + count) % MOD;
        }
        return (int) totalLen;
    }
}
