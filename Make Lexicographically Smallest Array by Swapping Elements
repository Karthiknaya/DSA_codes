class Solution {
    public int[] lexicographicallySmallestArray(int[] nums, int limit){
        int[] sortArr =new int[nums.length];
        for(int i =0;i<nums.length;i++){
            sortArr[i] = nums[i];
        }
        Arrays.sort(sortArr);
        int groupcount =0;
        Map<Integer, Integer> numGroupMap = new HashMap<>();
        numGroupMap.put(sortArr[0], groupcount);
        Map<Integer, LinkedList<Integer>> groupNumsMap = new HashMap<>();
        groupNumsMap.put(groupcount,new LinkedList<Integer>(Arrays.asList(sortArr[0])));
        for(int i =1;i<nums.length;i++){
            if(Math.abs(sortArr[i] - sortArr[i - 1])>limit){
                groupcount++;
            }
            numGroupMap.put(sortArr[i], groupcount);
            if(!groupNumsMap.containsKey(groupcount)){
                groupNumsMap.put(groupcount, new LinkedList<Integer>());
            }
            groupNumsMap.get(groupcount).add(sortArr[i]);
        }
        for(int i = 0;i<nums.length;i++){
            int num =nums[i];
            int group =numGroupMap.get(num);
            nums[i] =groupNumsMap.get(group).pop();
        }
        return nums;
    }
}
