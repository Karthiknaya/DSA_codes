class Solution{
    public String largestPalindromic(String num){
        int[] count = new int[10];
        for(char digit: num.toCharArray()) {
            count[digit - '0']++;
        }
        StringBuilder left =new StringBuilder();
        for(int digit=9;digit>=0;digit--){
            if(count[digit]>1){
                if(digit == 0 && left.length() == 0){
                    continue;
                }
                for(int i=0;i<count[digit]/2;i++){
                    left.append(digit);
                }
                count[digit]%=2;
            }
        }
        String max_Odd ="";
        for(int digit=9;digit>=0;digit--){
            if(count[digit]>0){
                max_Odd += digit;
                break;
            }
        }
        StringBuilder right=new StringBuilder();
        right.append(left);
        right.append(max_Odd);
        right.append(left.reverse());
        return right.toString();
    }
}
