class Solution {
    public int longestSubarray(int[] nums,int limit) {
        int n=nums.length;
        TreeMap<Integer, Integer> map=new TreeMap<>();
        int count=0;
        int left=0;
        for(int right=0;right<n;right++){
            map.put(nums[right],map.getOrDefault(nums[right],0)+1);
            while(map.lastKey()-map.firstKey()>limit){
               map.put(nums[left],map.getOrDefault(nums[left],0)-1);
               if (map.get(nums[left]) == 0) {
                    map.remove(nums[left]);
                }
               left++;
            }
            count = Math.max(count, right-left+1);
        }
        return count;
    }
}
