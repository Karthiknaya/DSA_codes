class Solution {
    // Function to find three numbers such that arr[smaller[i]] < arr[i] <
    // arr[greater[i]]
    public List<Integer> find3Numbers(int[] arr) {
        // code here
         int n = arr.length;

        // Early exit if array length is less than 3
        if (n < 3) return new ArrayList<>();

        int[] leftMin = new int[n];
        int[] rightMax = new int[n];

        // Populate leftMin array
        leftMin[0] = arr[0];
        for (int i = 1; i < n; i++) {
            leftMin[i] = Math.min(leftMin[i - 1], arr[i]);
        }

        // Populate rightMax array
        rightMax[n - 1] = arr[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            rightMax[i] = Math.max(rightMax[i + 1], arr[i]);
        }

        // Find the required triplet
        for (int j = 1; j < n - 1; j++) {
            if (arr[j] > leftMin[j - 1] && arr[j] < rightMax[j + 1]) {
                return Arrays.asList(leftMin[j - 1], arr[j], rightMax[j + 1]);
            }
        }

        // If no such triplet is found, return an empty list
        return new ArrayList<>();
    }
    
}
