class Solution {
    static class Pair implements Comparable<Pair>{
        int num;
        int ind;
        public Pair(int num,int ind){
            this.num=num;
            this.ind=ind;
        }
        public int compareTo(Pair P2){
           if(this.num==P2.num){
                return this.ind-P2.ind;
            }
            else{
                return this.num-P2.num;
            }  
        }
    }
    public long findScore(int[] nums) {
        PriorityQueue<Pair> pq=new PriorityQueue<>();
        for(int i=0;i<nums.length;i++){
            pq.add(new Pair(nums[i],i));
        }
        long sum=0;
        boolean[] visited=new boolean[nums.length];
        while(!pq.isEmpty()){
            Pair curr=pq.poll();
            int ind=curr.ind;
            int element=curr.num;
            if(visited[ind]) continue;
            sum+=element;
            visited[ind]=true;
            if(ind-1>=0) visited[ind-1]=true;
            if(ind+1<nums.length) visited[ind+1]=true;
        }
        return sum;
    }
}
