class Solution {
    public boolean canBeValid(String s, String locked) {
        int n=s.length();
        if(n%2!=0)return false;
        int open_and_mod=0;
        int close_fix=0;
        for(int i=0;i<n;i++){
            if(s.charAt(i)=='('||locked.charAt(i)=='0'){
                open_and_mod++;
            }else{
                close_fix++;
            }
            if(close_fix>open_and_mod)return false;
        }
        int open_fix=0;
        int close_and_mod=0;
        for(int i=n-1;i>=0;i--){
            if (s.charAt(i) == ')' || locked.charAt(i) == '0') {
                close_and_mod++;
            }else{
                open_fix++;
            }
            if(open_fix>close_and_mod)return false;
        }
        return true;
    }
}
