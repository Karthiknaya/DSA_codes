class Solution {
    List<List<String>> result;
    public List<List<String>> partition(String s) {
        result=new ArrayList<>();
        List<String> list=new ArrayList<>();
        getsets(s,0,list);
        return result;
    }
    public void getsets(String s,int start,List<String> list){
        if(start==s.length()){
            result.add(new ArrayList<>(list));
            return;
        }
        for(int i=start;i<s.length();i++){
            if(ispalindrome(s.substring(start,i+1))){
                list.add(s.substring(start,i+1));
                getsets(s,i+1,list);
                list.remove(list.size()-1);
            }
        }
    }
    public  boolean ispalindrome(String str){
            int i=0;
            int j=str.length()-1;
            while(i<=j){
                if(str.charAt(i++)!=str.charAt(j--)){
                    return false;
                }
            }
            return true;
      }
}
