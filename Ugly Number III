class Solution {
    public int nthUglyNumber(int n, int a, int b, int c) {
        long ab = get_LCM(a, b);
        long bc = get_LCM(b, c);
        long ac = get_LCM(a, c);
        long abc = get_LCM(ab, c);
        long low = 1, high = 2000000000;
        while (low < high) {
            long mid = low+(high-low)/2;
            if(mid / a + mid / b + mid / c - mid / ab - mid / bc - mid / ac + mid / abc >= n) {
                high = mid;
            }else{
                low = mid + 1;
            }
        }
        return (int) low;
    }
    private long get_GCD(long a, long b) {
        return b == 0 ? a : get_GCD(b, a % b);
    }
    private long get_LCM(long a, long b) {
        return a * b / get_GCD(a, b);
    }
}
