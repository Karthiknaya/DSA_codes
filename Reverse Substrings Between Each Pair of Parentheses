class Solution {
    public String reverseParentheses(String s) {
       Stack<Character> stk=new Stack<>();
       for(int i=0;i<s.length();i++){
           if(s.charAt(i)==')'){
               Queue<Character> q=new LinkedList<>();
               while(!stk.isEmpty() && stk.peek()!='('){
                   q.add(stk.pop());
               }
               stk.pop();
               while(!q.isEmpty()){
                   stk.push(q.poll());
               }
           }else{
               stk.push(s.charAt(i));
           }
       }
       char[] arr=new char[stk.size()];
       int i=stk.size()-1;
       while(!stk.isEmpty()){
           arr[i--]=stk.pop();
       }
       return new String(arr);
    }
}
