class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int len =nums.length;
        int max_length =0;
        int[] dpLeft =new int[len];
        int[] dpRight = new int[len];
        Arrays.fill(dpLeft,1);
        Arrays.fill(dpRight,1);
        for(int i=0;i<len;i++){
            for(int j=0;j<i;j++){
                if(nums[i]>nums[j]){
                    dpLeft[i] = Math.max(dpLeft[i], dpLeft[j] + 1);
                }
            }
        }
        for(int i =len -1;i>=0;i--){
            for(int j=len-1;j>i;j--){
                if(nums[i]>nums[j]){
                    dpRight[i] = Math.max(dpRight[i], dpRight[j] + 1);
                }
            }
        }
        for(int i=1;i<len-1;i++){
            if(dpLeft[i] > 1 && dpRight[i] > 1){
                max_length = Math.max(max_length, dpLeft[i] + dpRight[i] - 1);
            }
        }
        return len-max_length;
    }
}
