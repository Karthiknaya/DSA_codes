class Solution {
  public int lenLongestFibSubseq(int[] arr) {
    final int n = arr.length;
    int longest_sequence=0;
    int[][] dp = new int[n][n];
    for(int item[]:dp){
        Arrays.fill(item,2);
    }
    Map<Integer, Integer> map = new HashMap<>();
    for(int i = 0; i < n; ++i)
      map.put(arr[i], i);
    for(int j = 0; j < n; ++j)
      for(int k = j + 1; k < n; ++k) {
        final int diff = arr[k] - arr[j];
        if(diff < arr[j] && map.containsKey(diff)) {
          final int i = map.get(diff);
          dp[j][k]=dp[i][j]+1;
          longest_sequence = Math.max(longest_sequence, dp[j][k]);
        }
      }
    return longest_sequence;
  }
}
