class Solution {
    public String originalDigits(String s) {
        int[] letter_Count = new int[26];
        for(char ch : s.toCharArray()){
            letter_Count[ch - 'a']++;
        }
        int[] count = new int[10];
        //letters unique to 1 digit only
        count[0] =letter_Count['z' - 'a'];
        count[2] =letter_Count['w' - 'a'];
        count[4] =letter_Count['u' - 'a'];
        count[6] =letter_Count['x' - 'a'];
        count[8] =letter_Count['g' - 'a'];
        //letters not unique to single number
        count[3] =letter_Count['h' - 'a'] -count[8];
        count[5] =letter_Count['f' - 'a'] -count[4];
        count[7] =letter_Count['s' - 'a'] -count[6];
        count[1] =letter_Count['o' - 'a'] -count[0] - count[2] - count[4];
        count[9] =letter_Count['i' - 'a'] -count[5] - count[6] - count[8];
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<=9;i++){
            while(count[i]-- > 0){
                sb.append(i);
            }
        }
        return sb.toString();
    }
}
