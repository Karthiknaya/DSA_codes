class Solution {
    public int[] nodesBetweenCriticalPoints(ListNode head) {
        if (head.next.next==null)return new int[]{-1,-1};
        List<Integer> arr=new ArrayList<>();
        ListNode prev=head,curr=head.next,next=head.next.next;
        int ind=2;
        while(next!=null){
            if(curr.val>prev.val && curr.val>next.val){
                arr.add(ind);
            }
            if(curr.val<prev.val && curr.val<next.val){
                arr.add(ind);
            }
            ind++;
            prev=prev.next;
            curr=curr.next;
            next=next.next;
        }
        if (arr.size()<=1)return new int[]{-1,-1};
        int max=arr.get(arr.size()-1)-arr.get(0);
        int min=Integer.MAX_VALUE;
        for(int i=0;i<arr.size()-1;i++){
            min=Math.min(min,arr.get(i+1)-arr.get(i));
        }
        return new int[]{min,max};
    }
}
