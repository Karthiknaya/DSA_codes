class Solution {
    public int findTheLongestSubstring(String s) {
     Map<Character, Integer> vowelMap = new HashMap<>();
        vowelMap.put('a', 0);
        vowelMap.put('e', 1);
        vowelMap.put('i', 2);
        vowelMap.put('o', 3);
        vowelMap.put('u', 4);
        Map<Integer, Integer> stateMap = new HashMap<>();
        stateMap.put(0, -1);  
        int maxLen = 0;
        int currentState = 0; 
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            if(vowelMap.containsKey(ch)) {
                int bitPosition = vowelMap.get(ch);
                currentState ^= (1 << bitPosition);
            }
            if(stateMap.containsKey(currentState)){
                int prevIndex = stateMap.get(currentState);
                maxLen = Math.max(maxLen, i - prevIndex);
            }else{
                stateMap.put(currentState, i);
            }
        }
        return maxLen;
    }
}
