class Solution {
    public int findMaximizedCapital(int k, int w, int[] profits, int[] capital) {
        int cap_so_far=w;
        int[][] arr = new int[profits.length][2];
        for(int i=0; i<profits.length; i++){
            arr[i][0]=capital[i];
            arr[i][1]=profits[i];
        }
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        Arrays.sort(arr, (a, b)->(a[0]-b[0]));
        int ind=0;
        while(k>0){
            while(ind<profits.length && arr[ind][0]<=cap_so_far){
                pq.add(arr[ind][1]);
                ind++;
            }
            if(pq.isEmpty()){
                break;
            }
            cap_so_far+=pq.poll();
            k--;
        }
        return cap_so_far;
    }
}
