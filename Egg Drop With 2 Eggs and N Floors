class Solution {
    public int twoEggDrop(int n) {
    int k=2;
    int[][] dp = new int[k + 1][n + 1];
        
        for (int i = 1; i <= k; i++) {
            for (int j = 1; j <= n; j++) {
                if (i == 1) {
                    dp[i][j] = j;
                } else if (j == 1) {
                    dp[i][j] = 1;
                } else {
                    int low = 1, high = j, result = Integer.MAX_VALUE;
                    while (low <= high) {
                        int mid = (low + high) / 2;
                        int breaks = dp[i - 1][mid - 1];
                        int survives = dp[i][j - mid];
                        int temp = 1 + Math.max(breaks, survives);
                        if (breaks > survives) {
                            high = mid - 1;
                            result = Math.min(result, temp);
                        } else {
                            low = mid + 1;
                            result = Math.min(result, temp);
                        }
                    }
                    dp[i][j] = result;
                }
            }
        }
        
        return dp[k][n];
    }
}
