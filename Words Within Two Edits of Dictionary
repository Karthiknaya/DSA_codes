class Solution {
    public List<String> twoEditWords(String[] queries, String[] dictionary) {
        List<String> res = new ArrayList<>();

        for (String query : queries) {
            for (String dictionaryWord : dictionary) {
                if (isWithinTwoEdits(query, dictionaryWord)) {
                    res.add(query);
                    break;
                }
            }
        }

        return res;
    }
    private boolean isWithinTwoEdits(String query, String word) {
        if (Math.abs(query.length() - word.length()) > 2) return false;
        
        int[][] dp = new int[query.length() + 1][word.length() + 1];
        
        for (int i = 0; i <= query.length(); i++) {
            for (int j = 0; j <= word.length(); j++) {
                if (i == 0) {
                    dp[i][j] = j;
                } else if (j == 0) {
                    dp[i][j] = i;
                } else if (query.charAt(i - 1) == word.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1];
                } else {
                    dp[i][j] = 1 + Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]);
                }
            }
        }
        
        return dp[query.length()][word.length()] <= 2;
    }
}
