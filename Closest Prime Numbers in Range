class Solution {
    public int[] closestPrimes(int left, int right) {
        int ans[] = new int[2];
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=left ; i<=right ; ++i){
            if(isvalidPrime(i)){
                list.add(i);
            }
        }
        int minDiff =Integer.MAX_VALUE ;
        int ind1 =0;
        int ind2 =1 ;
        if(list.size()<=1) {
            ans[0]=-1;
            ans[1]=-1;
            return ans ;
        }
        while(ind2<list.size()){
            if(list.get(ind2)-list.get(ind1) < minDiff){
                minDiff = list.get(ind2)-list.get(ind1);
                ans[0]= list.get(ind1) ;
                ans[1]= list.get(ind2) ;
            }
            ++ind1;
            ++ind2;
        }
        return ans ;
    }
    private static boolean isvalidPrime(int n){
        if(n==1) return false ;
        if(n==2 ) return true ;
        for(int i=2 ; i<=Math.sqrt(n) ; ++i){
            if(n%i==0) return false;
        }
        return true ;
    }
}
