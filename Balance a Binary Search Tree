class Solution {
    public void inorder(TreeNode root, List<Integer> queue){
        if(root==null) return;
        inorder(root.left,queue);
        queue.add(root.val);
        inorder(root.right,queue);

    }
    public TreeNode balanceBST(TreeNode root) {
        List<Integer> queue = new ArrayList<>();
        inorder(root,queue);
        return build_bst(queue,0,queue.size()-1);

    }

    public TreeNode build_bst(List<Integer> queue,int i , int j){
        if(i>j) return null;
        int mid = (i+j)/2;
        TreeNode node = new TreeNode(queue.get(mid));
        node.left = build_bst(queue, i , mid-1);
        node.right = build_bst(queue, mid+1, j);
        return node;
    }
}
