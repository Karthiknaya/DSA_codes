class Solution {
    class Node {
        public Node[] children;
        public int freq;
        public Node() {
            children = new Node[26];
            freq = 0;
        }
    }
    public int[] sumPrefixScores(String[] words) {
        Node root = new Node();
        for (String word : words) {
            insert(word, root);
        }
        int[] and = new int[words.length];
        int index = 0;
        for (String word : words) {
            and[index++] = findCount(word, root);
        }
        return and;
    }
    private void insert(String word, Node root) {
        Node curr = root;
        for (int i = 0;i<word.length();i++) {
            int idx = (word.charAt(i) - 'a');
            if (curr.children[idx] == null) {
                curr.children[idx] = new Node();
            }
            curr = curr.children[idx];
            curr.freq++;
        }
    }
    private int findCount(String word, Node root) {
        Node curr = root;
        int res = 0;
        for (int i=0;i<word.length();i++) {
            int idx = (word.charAt(i) - 'a');
            curr = curr.children[idx];
            if (curr == null) {
                break;
            }
            res+= curr.freq;
        }
        return res;
    }
}
