class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m=mat.length;
        int n=mat[0].length;
        TreeMap<Integer,List<Integer>> map=new TreeMap<>();
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                int curr_ind_sum=i+j;
                if(!map.containsKey(curr_ind_sum)){
                    List<Integer> temp= new ArrayList<>();
                    temp.add(mat[i][j]);
                    map.put(curr_ind_sum, temp);
                }else {
                    List<Integer> temp = map.get(curr_ind_sum);
                    if(curr_ind_sum %2==1){
                        temp.add(mat[i][j]);
                    }else {
                        temp.add(0,mat[i][j]);
                    }
                }
            }
        }
        List<Integer> list=new ArrayList<>();
        int ind=0;
        for (List<Integer> temp:map.values()){
                list.addAll(temp);
        }
        int[] ans = new int[list.size()];
        for(int item:list) {
            ans[ind++]=item;
        }
        return ans;
    }
}
